// <auto-generated />
using System;
using MeuProjetoApi.BancoDados.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeuProjetoApi.Migrations
{
    [DbContext(typeof(MeuProjetoApiContexto))]
    [Migration("20230712223814_AdicionandoTabelaPrevisaoTempo")]
    partial class AdicionandoTabelaPrevisaoTempo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MeuProjetoAPI.Models.PrevisaoTempo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataBusca")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoCeu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("FusoHorario")
                        .HasColumnType("float");

                    b.Property<double?>("Graus")
                        .HasColumnType("float");

                    b.Property<string>("Humidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NascerDoSol")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeCidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PorDoSol")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pressao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int");

                    b.Property<double?>("SensacaoTermicaCelsius")
                        .HasColumnType("float");

                    b.Property<double?>("TemperaturaAtualCelsius")
                        .HasColumnType("float");

                    b.Property<double?>("TemperaturaMaximaCelsius")
                        .HasColumnType("float");

                    b.Property<double?>("TemperaturaMinimaCelsius")
                        .HasColumnType("float");

                    b.Property<double?>("VelocidadeKMH")
                        .HasColumnType("float");

                    b.Property<double?>("VisibilidadeKm")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("PrevisaoTempo", (string)null);
                });

            modelBuilder.Entity("MeuProjetoApi.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Pessoa", (string)null);
                });

            modelBuilder.Entity("MeuProjetoApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValue("usuario");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = false,
                            Email = "admin@email.com",
                            NomeUsuario = "admin",
                            Senha = "admin",
                            Tipo = "administrador"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = false,
                            Email = "jose@email.com",
                            NomeUsuario = "Jose",
                            Senha = "123",
                            Tipo = "usuario"
                        });
                });

            modelBuilder.Entity("MeuProjetoAPI.Models.PrevisaoTempo", b =>
                {
                    b.HasOne("MeuProjetoApi.Models.Usuario", "Usuario")
                        .WithMany("Previsoes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MeuProjetoApi.Models.Usuario", b =>
                {
                    b.Navigation("Previsoes");
                });
#pragma warning restore 612, 618
        }
    }
}
